name: 构建并推送Docker镜像到Docker Hub

permissions: write-all        

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置仓库名称
        id: repo
        run: |
          # 优先级：Secrets > 环境变量 > GitHub仓库名
          if [ -n "${{ secrets.CUSTOM_REPO_NAME }}" ]; then
            REPO_NAME="${{ secrets.CUSTOM_REPO_NAME }}"
            echo "::notice ::使用Secrets中的自定义仓库名"
          elif [ -n "${{ vars.CUSTOM_REPO_NAME }}" ]; then
            REPO_NAME="${{ vars.CUSTOM_REPO_NAME }}"
            echo "::notice ::使用Variables中的自定义仓库名"
          else
            REPO_NAME="${{ github.event.repository.name }}"
            echo "::notice ::使用GitHub仓库名"
          fi
          
          # 转换为小写并验证格式
          REPO_NAME=$(echo "${REPO_NAME}" | tr '[:upper:]' '[:lower:]')
          
          # 验证仓库名格式（Docker Hub要求）
          if ! echo "${REPO_NAME}" | grep -qE '^[a-z0-9][a-z0-9_.-]{0,254}$'; then
            echo "::error ::仓库名格式无效: ${REPO_NAME}"
            exit 1
          fi
          
          echo "name=${REPO_NAME}" >> $GITHUB_OUTPUT
          echo "::notice ::最终使用的仓库名: ${REPO_NAME}"

      - name: 设置Docker元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo.outputs.name }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}},enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,enable={{is_default_branch}}
            type=sha,format=short
            type=raw,value=stable,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录到Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      - name: 更新Docker Hub描述
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo.outputs.name }}
          readme-filepath: ./README.md
          short-description: ${{ github.event.repository.description }}

      - name: 输出镜像信息
        if: github.event_name != 'pull_request'
        run: |
          echo "### 🐳 Docker镜像已推送" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**仓库**: \`${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo.outputs.name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**标签**:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
